本章最后的例子扩展前面的计算器，使它成为一个虽然短小但是有现实意义的编译器。我们将添加命名的变量和赋值，比较表达式（大于、小于、等于等等），if/then/else/和do/while的流程控制，内置和用户自定义的函数以及一点点错误恢复机制。

前一版本的计算器并没有充分利用抽象语法树的优点，但是这一版本中，抽象语法树是实现流程控制和用户自定义函数的关键技术。下面是一个例子，它定义一个用户自定义函数，接着调用它，使用内置函数作为其中一个参数。

    > let avg(a, b) = (a+b)/2
    定义好的avg
    > avg(3, sqrt(25))
    = 4

问题：
    >let max(x,y) = if x > y then x; else y;;
    Defined max
    >max(12,43)
    = 43

调试：

    如果出现bad node P，原因是：
    newcmp函数中 a->nodetype = '0' + cmptype 是数字0而不是字母O
 
